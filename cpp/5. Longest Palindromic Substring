class Solution {
public:
    int Expand(string s, int left ,int right){
        int L=left,R=right;
        while(L>=0 && R<s.size() && s[L]==s[R]){
            L--;
            R++;
        }
        return R-L-1;
    }
    string longestPalindrome(string s) {
        int n=s.size();
        int start=0,end=0;
        int len=0;
        if (n==1) return s;
        if (n==0) return "";
        for (int i=0;i<n;i++){
            int len1=Expand(s,i,i);
            int len2=Expand(s,i,i+1);
            if (len1>len2){
                len=len1;
            }
            else{
                len=len2;
            }
            if (len> end-start){
                end=i+len/2;
                start=i-(len-1)/2;
            }
        }

        return s.substr(start,end-start+1);
    }
    

};
